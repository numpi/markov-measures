function Example2
%EXAMPLE2 Compute the accumulated measure a ttime T = 20. 

times = zeros(1, 5);
Ns = zeros(1, 5);

for i = 1 : 5
    % Load the matrix generated by Moebius. 
    Q = loadArm(sprintf('data/example2/Experiment_%d.arm', i));
    
    n = size(Q, 1);
    
    % Save the size of the model -- since these might change when we change
    % the examples. 
    Ns(i) = n;

    % We are interested in the accumulated measure at time 20
    T = 20;

    % This is the starting vector in the states
    pi0 = zeros(1, n); 
    pi0(1) = 1;

    % And we are interested in how much time we stay in the first state
    v = zeros(n,1);
    v(1:2:end) = 1;
    
    % v = ones(n,1); v(1:2:end) = 0;
    v = zeros(n,1); 
    
    % In this case it's easy to see that the reward will be this vector
    % here.
    v(4:2:end) = 1; v(end) = 1;
    
    % This can be used to compute the reward
    %for j = 1 : n
    %    if ~isempty(find(Q(j,:) == 0.1, 1))
    %        v(j) = 1;
    %    end
    %end

    % The following line might be uncommented to check that we are
    % computing the right thing -- as of now we are interested in taking the timings. 
    f = funm_markov(pi0, Q, v, 'phi', T);
    
    % Take the times
    times(i) = timeit(@() funm_markov(pi0, Q, v, 'phi', T));
    fprintf(' - N = %d, time: %e seconds (f = %e)\n', n, times(i), f);
end

dlmwrite('example2.dat', [ Ns', times' ], '\t');

end

